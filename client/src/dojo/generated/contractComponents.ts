/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;

export function defineContractComponents(world: World) {
  return {
    BackpackGrids: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, x: RecsType.Number, y: RecsType.Number, enabled: RecsType.Boolean, occupied: RecsType.Boolean },
        {
          metadata: {
            name: "BackpackGrids",
            types: ["contractaddress","u32","u32","bool","bool"],
            customTypes: [],
          },
        }
      );
    })(),
    BattleLog: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, id: RecsType.Number, dummyCharLevel: RecsType.Number, dummyCharId: RecsType.Number, winner: RecsType.BigInt },
        {
          metadata: {
            name: "BattleLog",
            types: ["contractaddress","u32","u32","u32","felt252"],
            customTypes: [],
          },
        }
      );
    })(),
    BattleLogCounter: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, count: RecsType.Number },
        {
          metadata: {
            name: "BattleLogCounter",
            types: ["contractaddress","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    BattleLogDetail: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, battleLogId: RecsType.Number, id: RecsType.Number, whoTriggered: RecsType.BigInt, whichItem: RecsType.Number, damageCaused: RecsType.Number, isDodged: RecsType.Boolean, cleansePoison: RecsType.Number, buffType: RecsType.BigInt, regenHP: RecsType.Number, player_armor_stacks: RecsType.Number, player_regen_stacks: RecsType.Number, player_reflect_stacks: RecsType.Number, player_poison_stacks: RecsType.Number, dummy_armor_stacks: RecsType.Number, dummy_regen_stacks: RecsType.Number, dummy_reflect_stacks: RecsType.Number, dummy_poison_stacks: RecsType.Number },
        {
          metadata: {
            name: "BattleLogDetail",
            types: ["contractaddress","u32","u32","felt252","u32","u32","bool","u32","felt252","u32","u32","u32","u32","u32","u32","u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    BattleLogDetailCounter: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, battleLogId: RecsType.Number, count: RecsType.Number },
        {
          metadata: {
            name: "BattleLogDetailCounter",
            types: ["contractaddress","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    CharacterItemInventory: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, id: RecsType.Number, itemId: RecsType.Number, position: { x: RecsType.Number, y: RecsType.Number }, rotation: RecsType.Number },
        {
          metadata: {
            name: "CharacterItemInventory",
            types: ["contractaddress","u32","u32","u32","u32","u32"],
            customTypes: ["Position"],
          },
        }
      );
    })(),
    CharacterItemStorage: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, id: RecsType.Number, itemId: RecsType.Number },
        {
          metadata: {
            name: "CharacterItemStorage",
            types: ["contractaddress","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    CharacterItemsInventoryCounter: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, count: RecsType.Number },
        {
          metadata: {
            name: "CharacterItemsInventoryCounter",
            types: ["contractaddress","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    CharacterItemsStorageCounter: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, count: RecsType.Number },
        {
          metadata: {
            name: "CharacterItemsStorageCounter",
            types: ["contractaddress","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    Character: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, name: RecsType.BigInt, gold: RecsType.Number, health: RecsType.Number, wins: RecsType.Number, loss: RecsType.Number, dummied: RecsType.Boolean, rating: RecsType.Number, totalWins: RecsType.Number, totalLoss: RecsType.Number, winStreak: RecsType.Number, birthCount: RecsType.Number, updatedAt: RecsType.BigInt },
        {
          metadata: {
            name: "Character",
            types: ["contractaddress","felt252","u32","u32","u32","u32","bool","u32","u32","u32","u32","u32","u64"],
            customTypes: [],
          },
        }
      );
    })(),
    NameRecord: (() => {
      return defineComponent(
        world,
        { name: RecsType.BigInt, player: RecsType.BigInt },
        {
          metadata: {
            name: "NameRecord",
            types: ["felt252","contractaddress"],
            customTypes: [],
          },
        }
      );
    })(),
    DummyCharacterItem: (() => {
      return defineComponent(
        world,
        { level: RecsType.Number, dummyCharId: RecsType.Number, counterId: RecsType.Number, itemId: RecsType.Number, position: { x: RecsType.Number, y: RecsType.Number }, rotation: RecsType.Number },
        {
          metadata: {
            name: "DummyCharacterItem",
            types: ["u32","u32","u32","u32","u32","u32","u32"],
            customTypes: ["Position"],
          },
        }
      );
    })(),
    DummyCharacterItemsCounter: (() => {
      return defineComponent(
        world,
        { level: RecsType.Number, dummyCharId: RecsType.Number, count: RecsType.Number },
        {
          metadata: {
            name: "DummyCharacterItemsCounter",
            types: ["u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    DummyCharacter: (() => {
      return defineComponent(
        world,
        { level: RecsType.Number, id: RecsType.Number, name: RecsType.BigInt, health: RecsType.Number },
        {
          metadata: {
            name: "DummyCharacter",
            types: ["u32","u32","felt252","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    DummyCharacterCounter: (() => {
      return defineComponent(
        world,
        { level: RecsType.Number, count: RecsType.Number },
        {
          metadata: {
            name: "DummyCharacterCounter",
            types: ["u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    Item: (() => {
      return defineComponent(
        world,
        { id: RecsType.Number, name: RecsType.BigInt, itemType: RecsType.Number, width: RecsType.Number, height: RecsType.Number, price: RecsType.Number, damage: RecsType.Number, cleansePoison: RecsType.Number, chance: RecsType.Number, cooldown: RecsType.Number, rarity: RecsType.Number, armor: RecsType.Number, armorActivation: RecsType.Number, regen: RecsType.Number, regenActivation: RecsType.Number, reflect: RecsType.Number, reflectActivation: RecsType.Number, poison: RecsType.Number, poisonActivation: RecsType.Number },
        {
          metadata: {
            name: "Item",
            types: ["u32","felt252","u8","u32","u32","u32","u32","u32","u32","u8","u8","u32","u8","u32","u8","u32","u8","u32","u8"],
            customTypes: [],
          },
        }
      );
    })(),
    ItemsCounter: (() => {
      return defineComponent(
        world,
        { id: RecsType.BigInt, count: RecsType.Number },
        {
          metadata: {
            name: "ItemsCounter",
            types: ["felt252","u32"],
            customTypes: [],
          },
        }
      );
    })(),
    Shop: (() => {
      return defineComponent(
        world,
        { player: RecsType.BigInt, item1: RecsType.Number, item2: RecsType.Number, item3: RecsType.Number, item4: RecsType.Number, item5: RecsType.Number, item6: RecsType.Number },
        {
          metadata: {
            name: "Shop",
            types: ["contractaddress","u32","u32","u32","u32","u32","u32"],
            customTypes: [],
          },
        }
      );
    })(),
  };
}
